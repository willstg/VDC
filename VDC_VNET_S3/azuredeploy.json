{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {

    "baseUrl": {
      "defaultValue": "https://github.com/willstg/VDC/tree/master/VDC_VNET_VA",
      "type": "string",
      "metadata": {
        "artifactsBaseUrl": "",
        "description": "URL to acquire other templates"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "USGov Virginia",
      "metadata": {
        "description": "Deployment location. (example: USGov Virginia)"
      }
    },

    "ResourceGroupName": {
      "type": "string",
      "defaultValue": "vdc_vnet_va"
    },


    "vnetName": {
      "type": "string",
      "defaultValue": "vnet_vdc_va",
      "metadata": {
        "description": "AzureFoundation VNET for Virtual Data Center"
      }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.190.128.0/18",
      "metadata": {
        "description": "CIDR prefix for the VNet address space."
      }
    },
    "subnet700Prefix": {
      "type": "string",
      "defaultValue": "10.190.128.0/29",
      "metadata": { "description": "Subnet for CSR for Inside interface" }
    },
    "subnet700Name": {
      "type": "string",
      "defaultValue": "700_CSR_In_Srvcs_VDCMac_VA",
      "metadata": { "description": "Subnet for CSR for Inside interface" }
    },
    "subnet700NSG": {
      "type": "string",
      "defaultValue": "700_NSG_CSR_In",
      "metadata": { "description": "NSG: Subnet for CSR for Inside interface" }
    },
    "subnet700UDR": {
      "type": "string",
      "defaultValue": "700_UDR_CSR_In",
      "metadata": { "description": "NSG: Subnet for CSR for Inside interface" }
    },
    "subnet701Prefix": {
      "type": "string",
      "defaultValue": "10.190.128.8/29",
      "metadata": { "description": "Subnet for CSR for Outside" }
    },
    "subnet701Name": {
      "type": "string",
      "defaultValue": "701_CSR_Out_Srvcs_VDCMac_VA",
      "metadata": { "description": "Subnet for CSR for Outside" }
    },
    "subnet701NSG": {
      "type": "string",
      "defaultValue": "701_NSG_CSR_Out",
      "metadata": { "description": "NSG: Subnet for CSR for Outside" }
    },
    "subnet701UDR": {
      "type": "string",
      "defaultValue": "701_UDR_CSR_Out",
      "metadata": { "description": "NSG: Subnet for CSR for Outside" }
    },
    "subnet702Prefix": {
      "type": "string",
      "defaultValue": "10.190.128.16/29",
      "metadata": { "description": "Subnet for the CSR Tunnel" }
    },
    "subnet702Name": {
      "type": "string",
      "defaultValue": "702_CSR_Tunnel_Srvcs_VDCMac_VA",
      "metadata": { "description": "Subnet for the CSR Tunnel" }
    },
    "subnet702NSG": {
      "type": "string",
      "defaultValue": "702_NSG_CSR_Tunnel",
      "metadata": { "description": "NSG: Subnet for the CSR Tunnel" }
    },
    "subnet702UDR": {
      "type": "string",
      "defaultValue": "702_UDR_CSR_Tunnel",
      "metadata": { "description": "NSG: Subnet for the CSR Tunnel" }
    },
    "subnet703Prefix": {
      "type": "string",
      "defaultValue": "10.190.128.24/29",
      "metadata": { "description": "Failover subnet" }
    },
    "subnet703Name": {
      "type": "string",
      "defaultValue": "703_CSR_HA_Srvcs_VDCMac_VA",
      "metadata": { "description": "Failover subnet" }
    },
    "subnet703NSG": {
      "type": "string",
      "defaultValue": "703_NSG_CSR_HA",
      "metadata": { "description": "NSG: Failover subnet" }
    },
    "subnet703UDR": {
      "type": "string",
      "defaultValue": "703_UDR_CSR_HA",
      "metadata": { "description": "NSG: Failover subnet" }
    },
    "subnet710Prefix": {
      "type": "string",
      "defaultValue": "10.190.128.64/29",
      "metadata": { "description": "ASA management interface" }
    },
    "subnet710Name": {
      "type": "string",
      "defaultValue": "710_IntASA_Mgnt_Srvcs_VDCMac_VA",
      "metadata": { "description": "ASA management interface" }
    },
    "subnet710NSG": {
      "type": "string",
      "defaultValue": "710_NSG_IntASA_Mgnt",
      "metadata": { "description": "NSG: ASA management interface" }
    },
    "subnet710UDR": {
      "type": "string",
      "defaultValue": "710_UDR_IntASA_Mgnt",
      "metadata": { "description": "NSG: ASA management interface" }
    },
    "subnet711Prefix": {
      "type": "string",
      "defaultValue": "10.190.128.72/29",
      "metadata": { "description": "ASA Inside Interface" }
    },
    "subnet711Name": {
      "type": "string",
      "defaultValue": "711_IntASA_In_Srvcs_VDCMac_VA",
      "metadata": { "description": "ASA Inside Interface" }
    },
    "subnet711NSG": {
      "type": "string",
      "defaultValue": "711_NSG_IntASA_In",
      "metadata": { "description": "NSG: ASA Inside Interface" }
    },
    "subnet711UDR": {
      "type": "string",
      "defaultValue": "711_UDR_IntASA_In",
      "metadata": { "description": "NSG: ASA Inside Interface" }
    },
    "subnet712Prefix": {
      "type": "string",
      "defaultValue": "10.190.128.80/29",
      "metadata": { "description": "ASA Outside Interface" }
    },
    "subnet712Name": {
      "type": "string",
      "defaultValue": "712_IntASA_Out_Srvcs_VDCMac_VA",
      "metadata": { "description": "ASA Outside Interface" }
    },
    "subnet712NSG": {
      "type": "string",
      "defaultValue": "712_NSG_IntASA_Out",
      "metadata": { "description": "NSG: ASA Outside Interface" }
    },
    "subnet712UDR": {
      "type": "string",
      "defaultValue": "712_UDR_IntASA_Out",
      "metadata": { "description": "NSG: ASA Outside Interface" }
    },
    "subnet713Prefix": {
      "type": "string",
      "defaultValue": "10.190.128.88/29",
      "metadata": { "description": "ASA DMZ Interface" }
    },
    "subnet713Name": {
      "type": "string",
      "defaultValue": "713_IntASA_DMZ_Srvcs_VDCMac_VA",
      "metadata": { "description": "ASA DMZ Interface" }
    },
    "subnet713NSG": {
      "type": "string",
      "defaultValue": "713_NSG_IntASA_DMZ",
      "metadata": { "description": "NSG: ASA DMZ Interface" }
    },
    "subnet713UDR": {
      "type": "string",
      "defaultValue": "713_UDR_IntASA_DMZ",
      "metadata": { "description": "NSG: ASA DMZ Interface" }
    },
    "subnet715Prefix": {
      "type": "string",
      "defaultValue": "10.190.128.96/29",
      "metadata": { "description": "Internal Loadbalancer virtual appliance" }
    },
    "subnet715Name": {
      "type": "string",
      "defaultValue": "715_IntLB_Srvcs_VDCMac_VA",
      "metadata": { "description": "Internal Loadbalancer virtual appliance" }
    },
    "subnet715NSG": {
      "type": "string",
      "defaultValue": "715_NSG_IntLB",
      "metadata": { "description": "NSG: Internal Loadbalancer virtual appliance" }
    },
    "subnet715UDR": {
      "type": "string",
      "defaultValue": "715_UDR_IntLB",
      "metadata": { "description": "NSG: Internal Loadbalancer virtual appliance" }
    },
    "subnet750Prefix": {
      "type": "string",
      "defaultValue": "10.190.128.112/29",
      "metadata": { "description": "ASA Management interface" }
    },
    "subnet750Name": {
      "type": "string",
      "defaultValue": "750_ExtASA_Mgnt_Srvcs_VDCMac_VA",
      "metadata": { "description": "ASA Management interface" }
    },
    "subnet750NSG": {
      "type": "string",
      "defaultValue": "750_NSG_ExtASA_Mgnt",
      "metadata": { "description": "NSG: ASA Management interface" }
    },
    "subnet750UDR": {
      "type": "string",
      "defaultValue": "750_UDR_ExtASA_Mgnt",
      "metadata": { "description": "NSG: ASA Management interface" }
    },
    "subnet751Prefix": {
      "type": "string",
      "defaultValue": "10.190.128.120/29",
      "metadata": { "description": "ASA Inside Interface" }
    },
    "subnet751Name": {
      "type": "string",
      "defaultValue": "751_ExtASA_In_Srvcs_VDCMac_VA",
      "metadata": { "description": "ASA Inside Interface" }
    },
    "subnet751NSG": {
      "type": "string",
      "defaultValue": "751_NSG_ExtASA_In",
      "metadata": { "description": "NSG: ASA Inside Interface" }
    },
    "subnet751UDR": {
      "type": "string",
      "defaultValue": "751_UDR_ExtASA_In",
      "metadata": { "description": "NSG: ASA Inside Interface" }
    },
    "subnet752Prefix": {
      "type": "string",
      "defaultValue": "10.190.128.128/29",
      "metadata": { "description": "ASA Outside Interface" }
    },
    "subnet752Name": {
      "type": "string",
      "defaultValue": "752_ExtASA_Out_Srvcs_VDCMac_VA",
      "metadata": { "description": "ASA Outside Interface" }
    },
    "subnet752NSG": {
      "type": "string",
      "defaultValue": "752_NSG_ExtASA_Out",
      "metadata": { "description": "NSG: ASA Outside Interface" }
    },
    "subnet752UDR": {
      "type": "string",
      "defaultValue": "752_UDR_ExtASA_Out",
      "metadata": { "description": "NSG: ASA Outside Interface" }
    },
    "subnet753Prefix": {
      "type": "string",
      "defaultValue": "10.190.128.136/29",
      "metadata": { "description": "ASA DMZ Interface" }
    },
    "subnet753Name": {
      "type": "string",
      "defaultValue": "753_ExtASA_DMZ_Srvcs_VDCMac_VA",
      "metadata": { "description": "ASA DMZ Interface" }
    },
    "subnet753NSG": {
      "type": "string",
      "defaultValue": "753_NSG_ExtASA_DMZ",
      "metadata": { "description": "NSG: ASA DMZ Interface" }
    },
    "subnet753UDR": {
      "type": "string",
      "defaultValue": "753_UDR_ExtASA_DMZ",
      "metadata": { "description": "NSG: ASA DMZ Interface" }
    },
    "subnet755Prefix": {
      "type": "string",
      "defaultValue": "10.190.128.144/29",
      "metadata": { "description": "External Loadbalancer Virtual Network Appliance " }
    },
    "subnet755Name": {
      "type": "string",
      "defaultValue": "755_ExtLB_Srvcs_VDCMac_VA",
      "metadata": { "description": "External Loadbalancer Virtual Network Appliance " }
    },
    "subnet755NSG": {
      "type": "string",
      "defaultValue": "755_NSG_ExtLB",
      "metadata": { "description": "NSG: External Loadbalancer Virtual Network Appliance " }
    },
    "subnet755UDR": {
      "type": "string",
      "defaultValue": "755_UDR_ExtLB",
      "metadata": { "description": "NSG: External Loadbalancer Virtual Network Appliance " }
    },
    "subnet798Prefix": {
      "type": "string",
      "defaultValue": "10.190.128.224/28",
      "metadata": { "description": "ExpressRoute Termination" }
    },
    "subnet798Name": {
      "type": "string",
      "defaultValue": "798_ER_Srvcs_VDCMac_VA",
      "metadata": { "description": "ExpressRoute Termination" }
    },
    "subnet798NSG": {
      "type": "string",
      "defaultValue": "798_NSG_ER",
      "metadata": { "description": "NSG: ExpressRoute Termination" }
    },
    "subnet798UDR": {
      "type": "string",
      "defaultValue": "798_UDR_ER",
      "metadata": { "description": "NSG: ExpressRoute Termination" }
    },
    "subnet700VNAIP": {
      "type": "string",
      "defaultValue": "10.190.128.4",
      "metadata": { "description": "UDR: Subnet for CSR for Inside interface" }
    },
    "subnet701VNAIP": {
      "type": "string",
      "defaultValue": "10.190.128.12",
      "metadata": { "description": "UDR: Subnet for CSR for Outside" }
    },
    "subnet702VNAIP": {
      "type": "string",
      "defaultValue": "10.190.128.20",
      "metadata": { "description": "UDR: Subnet for the CSR Tunnel" }
    },
    "subnet703VNAIP": {
      "type": "string",
      "defaultValue": "10.190.128.28",
      "metadata": { "description": "UDR: Failover subnet" }
    },
    "subnet710VNAIP": {
      "type": "string",
      "defaultValue": "10.190.128.68",
      "metadata": { "description": "UDR: ASA management interface" }
    },
    "subnet711VNAIP": {
      "type": "string",
      "defaultValue": "10.190.128.76",
      "metadata": { "description": "UDR: ASA Inside Interface" }
    },
    "subnet712VNAIP": {
      "type": "string",
      "defaultValue": "10.190.128.84",
      "metadata": { "description": "UDR: ASA Outside Interface" }
    },
    "subnet713VNAIP": {
      "type": "string",
      "defaultValue": "10.190.128.92",
      "metadata": { "description": "UDR: ASA DMZ Interface" }
    },
    "subnet715VNAIP": {
      "type": "string",
      "defaultValue": "10.190.128.76",
      "metadata": { "description": "UDR: Internal Loadbalancer virtual appliance" }
    },
    "subnet750VNAIP": {
      "type": "string",
      "defaultValue": "10.190.170.116",
      "metadata": { "description": "UDR: ASA Management interface" }
    },
    "subnet751VNAIP": {
      "type": "string",
      "defaultValue": "10.190.171.124",
      "metadata": { "description": "UDR: ASA Inside Interface" }
    },
    "subnet752VNAIP": {
      "type": "string",
      "defaultValue": "10.190.171.132",
      "metadata": { "description": "UDR: ASA Outside Interface" }
    },
    "subnet753VNAIP": {
      "type": "string",
      "defaultValue": "10.190.172.140",
      "metadata": { "description": "UDR: ASA DMZ Interface" }
    },
    "subnet755VNAIP": {
      "type": "string",
      "defaultValue": "10.190.174.148",
      "metadata": { "description": "UDR: External Loadbalancer Virtual Network Appliance " }
    },


    "subnet799Prefix": {
      "type": "string",
      "defaultValue": "10.190.128.240/28",
      "metadata": { "description": "Subnet for the gatway S2S Tunnel" }
    },
    "subnet799Name": {
      "type": "string",
      "defaultValue": "GatewaySubnet",
      "metadata": {
        "description": "Arbitrary name for the new gateway"
      }
    },
    "gatewayName": {
      "type": "string",
      "defaultValue": "Azure2ADC",
      "metadata": {
        "description": "Arbitrary name for the new connection between Azure VNet and other network"
      }
    },
    "gatewayVPNType": {
      "type": "string",
      "metadata": {
        "description": "Route based or policy based"
      },
      "defaultValue": "RouteBased",
      "allowedValues": [
        "RouteBased",
        "PolicyBased"
      ]
    },
    "gatewayLocalIPPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/15",
      "metadata": { "description": "what networks are accecible with this gagteway" }
    },
    "gatewayLocalName": {
      "type": "string",
      "defaultValue": "LocalNetwork_ADC",
      "metadata": { "description": "what networks are accecible with this gagteway" }
    },
    "gatewayConnectionName": {
      "type": "string",
      "defaultValue": "VDCGateway",
      "metadata": {
        "description": "Arbitrary name for gateway resource representing "
      }
    },
    "gatewayLocalIpAddress": {
      "type": "string",
      "defaultValue": "1.1.1.1",
      "metadata": {
        "description": "Public IP"
      }
    },
    "gatewayPublicIPName": {
      "type": "string",
      "defaultValue": "azureGatewayIP",
      "metadata": {
        "description": "Arbitrary name for public IP resource used for the new azure gateway"
      }
    },
    "gatewaySku": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "Standard",
        "HighPerformance"
      ],
      "metadata": {
        "description": "The Sku of the Gateway. This must be one of Basic, Standard or HighPerformance."
      }
    },

    "gatewaySharedKey": {
      "type": "securestring",
      "metadata": {
        "description": "Shared key (PSK) for IPSec tunnel"
      }
    },

    "vmCSRAdminUsername": {
      "defaultValue": "",
      "type": "String",
      "metadata": {
        "description": "Username for the Virtual Machine. If sshPublicKey is used, username need to be :azureuser"
      }
    },
    "vmCSRadminPassword": {
      "defaultValue": "",
      "type": "SecureString",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "vmAuthNType": {
      "defaultValue": "password",
      "allowedValues": [ "password" ],
      "type": "String",
      "metadata": {
        "description": "Authentication Type to chose for the Virtual Machines, If sshPublicKey is used, AminUsername need to be: azureuser"
      }
    },
    "vmCSR1aName": {
      "type": "string",
      "defaultValue": "vdcpccsr1a",
      "metadata": { "description": "The name of the primary Router" }
    },
    "vmCSR1aPIPName": {
      "type": "string",
      "defaultvalue": "700_CSR1a",
      "metadata": { "description": "PublicIP Address Name" }
    },
    "vmCSRPremiumStorageName": {
      "type": "string",
      "defaultValue": "vdcvnettx2a",
      "metadata": {
        "description": "Premium Storage account name"
      }
    },
    "vmCSRStndStorageName": {
      "type": "string",
      "defaultvalue": "vdcvnettx1a",
      "metadata": {
        "description": "Storage account name"
      }
    },
    "vmCSRSize": {
      "defaultValue": "Standard_D3_v2",
      "allowedValues": [
        "Standard_D3_v2"
      ],
      "type": "string",
      "metadata": {
        "description": "Size of the Virtual Machine"
      }
    },

    "vmCSR1aSubnet700IP": {
      "type": "string",
      "defaultValue": "10.190.128.4",
      "metadata": { "description": "NIC0 IP Address internal" }
    },

    "vmCSR1aSubnet701IP": {
      "type": "string",
      "defaultValue": "10.190.128.12",
      "metadata": { "description": "NIC1 IP Address internal" }
    },
    "vmCSR1aSubnet702IP": {
      "type": "string",
      "defaultValue": "10.190.128.20",
      "metadata": { "description": "NIC2 IP Address internal" }
    },

    "vmCSR1aSubnet703IP": {
      "type": "string",
      "defaultValue": "10.190.128.28",
      "metadata": { "description": "NIC3 IP Address internal" }
    }
  },

  "variables": {
    "apiVersion": "2015-06-15",
    "templateBaseUrl": "https://raw.githubusercontent.com/willstg/azurefoundation/master/ARM/VNET",
    "All_Internet.Inbound.Deny": {
      "description": "All_Internet.Inbound.Deny",
      "protocol": "Tcp",
      "sourcePortRange": "*",
      "destinationPortRange": "*",
      "sourceAddressPrefix": "INTERNET",
      "destinationAddressPrefix": "*",
      "access": "Deny",
      "priority": 150,
      "direction": "Inbound"
    },
    "All_Internet.Inbound.Allow": {
      "description": "All_Internet.Inbound.Allow",
      "protocol": "Tcp",
      "sourcePortRange": "*",
      "destinationPortRange": "*",
      "sourceAddressPrefix": "INTERNET",
      "destinationAddressPrefix": "*",
      "access": "Allow",
      "priority": 150,
      "direction": "Inbound"
    },
    "SSH.Inbound.Allow": {
      "description": "SSH.Inbound.Allow",
      "protocol": "Tcp",
      "sourcePortRange": "22",
      "destinationPortRange": "*",
      "sourceAddressPrefix": "INTERNET",
      "destinationAddressPrefix": "*",
      "access": "Allow",
      "priority": 100,
      "direction": "Inbound"
    },
    "UDP500.Inbound.Allow": {
      "description": "UDP500.Inbound.Allow",
      "protocol": "Udp",
      "sourcePortRange": "500",
      "destinationPortRange": "*",
      "sourceAddressPrefix": "INTERNET",
      "destinationAddressPrefix": "*",
      "access": "Allow",
      "priority": 101,
      "direction": "Inbound"
    },
    "UDP4500.Inbound.Allow": {
      "description": "UDP4500.Inbound.Allow",
      "protocol": "Udp",
      "sourcePortRange": "4500",
      "destinationPortRange": "*",
      "sourceAddressPrefix": "INTERNET",
      "destinationAddressPrefix": "*",
      "access": "Allow",
      "priority": 102,
      "direction": "Inbound"
    },
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
    "subnet799Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet799Name'))]",
    "api-version": "2015-06-15",
    "imagePublisher": "cisco",
    "imageOffer": "cisco-csr-1000v",
    "imageSKU": "csr-azure-byol",
    "OSDiskName": "[concat(parameters('vmCSR1aName'), '-disk')]",
    "vmStorageAccountContainerName": "vhds",
    "subnet700Ref": "[concat(variables('vnetID'),'/subnets/', parameters('Subnet700Name'))]",
    "subnet701Ref": "[concat(variables('vnetID'),'/subnets/', parameters('Subnet701Name'))]",
    "subnet702Ref": "[concat(variables('vnetID'),'/subnets/', parameters('Subnet702Name'))]",
    "subnet703Ref": "[concat(variables('vnetID'),'/subnets/', parameters('Subnet703Name'))]",
    "osProfilepassword": {
      "computername": "[parameters('vmCSR1aName')]",
      "adminUsername": "[parameters('vmCSRAdminUsername')]",
      "adminPassword": "[parameters('vmCSRadminPassword')]"
    }
  },
  "resources": [



    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet700NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "700_NSG_CSR_InVA" },
      "properties": {
        "securityRules": [
          {
            "name": "[variables('All_Internet.Inbound.Deny').description]",
            "properties": {
              "description": "[variables('All_Internet.Inbound.Deny').description]",
              "protocol": "[variables('All_Internet.Inbound.Deny').protocol]",
              "sourcePortRange": "[variables('All_Internet.Inbound.Deny').sourcePortRange]",
              "destinationPortRange": "[variables('All_Internet.Inbound.Deny').destinationPortRange]",
              "sourceAddressPrefix": "[variables('All_Internet.Inbound.Deny').sourceAddressPrefix]",
              "destinationAddressPrefix": "[variables('All_Internet.Inbound.Deny').destinationAddressPrefix]",
              "access": "[variables('All_Internet.Inbound.Deny').access]",
              "priority": "[variables('All_Internet.Inbound.Deny').priority]",
              "direction": "[variables('All_Internet.Inbound.Deny').direction]"
            }
          },
          {
            "name": "[variables('SSH.Inbound.Allow').description]",
            "properties": {
              "description": "[variables('SSH.Inbound.Allow').description]",
              "protocol": "[variables('SSH.Inbound.Allow').protocol]",
              "sourcePortRange": "[variables('SSH.Inbound.Allow').sourcePortRange]",
              "destinationPortRange": "[variables('SSH.Inbound.Allow').destinationPortRange]",
              "sourceAddressPrefix": "[variables('SSH.Inbound.Allow').sourceAddressPrefix]",
              "destinationAddressPrefix": "[variables('SSH.Inbound.Allow').destinationAddressPrefix]",
              "access": "[variables('SSH.Inbound.Allow').access]",
              "priority": "[variables('SSH.Inbound.Allow').priority]",
              "direction": "[variables('SSH.Inbound.Allow').direction]"
            }
          },
          {
            "name": "[variables('UDP500.Inbound.Allow').description]",
            "properties": {
              "description": "[variables('UDP500.Inbound.Allow').description]",
              "protocol": "[variables('UDP500.Inbound.Allow').protocol]",
              "sourcePortRange": "[variables('UDP500.Inbound.Allow').sourcePortRange]",
              "destinationPortRange": "[variables('UDP500.Inbound.Allow').destinationPortRange]",
              "sourceAddressPrefix": "[variables('UDP500.Inbound.Allow').sourceAddressPrefix]",
              "destinationAddressPrefix": "[variables('UDP500.Inbound.Allow').destinationAddressPrefix]",
              "access": "[variables('UDP500.Inbound.Allow').access]",
              "priority": "[variables('UDP500.Inbound.Allow').priority]",
              "direction": "[variables('UDP500.Inbound.Allow').direction]"
            }
          },
          {
            "name": "[variables('UDP4500.Inbound.Allow').description]",
            "properties": {
              "description": "[variables('UDP4500.Inbound.Allow').description]",
              "protocol": "[variables('UDP4500.Inbound.Allow').protocol]",
              "sourcePortRange": "[variables('UDP4500.Inbound.Allow').sourcePortRange]",
              "destinationPortRange": "[variables('UDP4500.Inbound.Allow').destinationPortRange]",
              "sourceAddressPrefix": "[variables('UDP4500.Inbound.Allow').sourceAddressPrefix]",
              "destinationAddressPrefix": "[variables('UDP4500.Inbound.Allow').destinationAddressPrefix]",
              "access": "[variables('UDP4500.Inbound.Allow').access]",
              "priority": "[variables('UDP4500.Inbound.Allow').priority]",
              "direction": "[variables('UDP4500.Inbound.Allow').direction]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet701NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "701_NSG_CSR_OutVA" },
      "properties": {
        "securityRules": [
          {
            "name": "[variables('All_Internet.Inbound.Deny').description]",
            "properties": {
              "description": "[variables('All_Internet.Inbound.Deny').description]",
              "protocol": "[variables('All_Internet.Inbound.Deny').protocol]",
              "sourcePortRange": "[variables('All_Internet.Inbound.Deny').sourcePortRange]",
              "destinationPortRange": "[variables('All_Internet.Inbound.Deny').destinationPortRange]",
              "sourceAddressPrefix": "[variables('All_Internet.Inbound.Deny').sourceAddressPrefix]",
              "destinationAddressPrefix": "[variables('All_Internet.Inbound.Deny').destinationAddressPrefix]",
              "access": "[variables('All_Internet.Inbound.Deny').access]",
              "priority": "[variables('All_Internet.Inbound.Deny').priority]",
              "direction": "[variables('All_Internet.Inbound.Deny').direction]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet702NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "702_NSG_CSR_TunnelVA" },
      "properties": {
        "securityRules": [
          {
            "name": "[variables('All_Internet.Inbound.Deny').description]",
            "properties": {
              "description": "[variables('All_Internet.Inbound.Deny').description]",
              "protocol": "[variables('All_Internet.Inbound.Deny').protocol]",
              "sourcePortRange": "[variables('All_Internet.Inbound.Deny').sourcePortRange]",
              "destinationPortRange": "[variables('All_Internet.Inbound.Deny').destinationPortRange]",
              "sourceAddressPrefix": "[variables('All_Internet.Inbound.Deny').sourceAddressPrefix]",
              "destinationAddressPrefix": "[variables('All_Internet.Inbound.Deny').destinationAddressPrefix]",
              "access": "[variables('All_Internet.Inbound.Deny').access]",
              "priority": "[variables('All_Internet.Inbound.Deny').priority]",
              "direction": "[variables('All_Internet.Inbound.Deny').direction]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet703NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "703_NSG_CSR_HAVA" },
      "properties": {
        "securityRules": [
          {
            "name": "[variables('All_Internet.Inbound.Deny').description]",
            "properties": {
              "description": "[variables('All_Internet.Inbound.Deny').description]",
              "protocol": "[variables('All_Internet.Inbound.Deny').protocol]",
              "sourcePortRange": "[variables('All_Internet.Inbound.Deny').sourcePortRange]",
              "destinationPortRange": "[variables('All_Internet.Inbound.Deny').destinationPortRange]",
              "sourceAddressPrefix": "[variables('All_Internet.Inbound.Deny').sourceAddressPrefix]",
              "destinationAddressPrefix": "[variables('All_Internet.Inbound.Deny').destinationAddressPrefix]",
              "access": "[variables('All_Internet.Inbound.Deny').access]",
              "priority": "[variables('All_Internet.Inbound.Deny').priority]",
              "direction": "[variables('All_Internet.Inbound.Deny').direction]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet710NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "710_NSG_IntASA_MgntVA" },
      "properties": {
        "securityRules": [
          {
            "name": "[variables('All_Internet.Inbound.Deny').description]",
            "properties": {
              "description": "[variables('All_Internet.Inbound.Deny').description]",
              "protocol": "[variables('All_Internet.Inbound.Deny').protocol]",
              "sourcePortRange": "[variables('All_Internet.Inbound.Deny').sourcePortRange]",
              "destinationPortRange": "[variables('All_Internet.Inbound.Deny').destinationPortRange]",
              "sourceAddressPrefix": "[variables('All_Internet.Inbound.Deny').sourceAddressPrefix]",
              "destinationAddressPrefix": "[variables('All_Internet.Inbound.Deny').destinationAddressPrefix]",
              "access": "[variables('All_Internet.Inbound.Deny').access]",
              "priority": "[variables('All_Internet.Inbound.Deny').priority]",
              "direction": "[variables('All_Internet.Inbound.Deny').direction]"
            }
          },
          {
            "name": "[variables('SSH.Inbound.Allow').description]",
            "properties": {
              "description": "[variables('SSH.Inbound.Allow').description]",
              "protocol": "[variables('SSH.Inbound.Allow').protocol]",
              "sourcePortRange": "[variables('SSH.Inbound.Allow').sourcePortRange]",
              "destinationPortRange": "[variables('SSH.Inbound.Allow').destinationPortRange]",
              "sourceAddressPrefix": "[variables('SSH.Inbound.Allow').sourceAddressPrefix]",
              "destinationAddressPrefix": "[variables('SSH.Inbound.Allow').destinationAddressPrefix]",
              "access": "[variables('SSH.Inbound.Allow').access]",
              "priority": "[variables('SSH.Inbound.Allow').priority]",
              "direction": "[variables('SSH.Inbound.Allow').direction]"
            }
          },
          {
            "name": "[variables('UDP500.Inbound.Allow').description]",
            "properties": {
              "description": "[variables('UDP500.Inbound.Allow').description]",
              "protocol": "[variables('UDP500.Inbound.Allow').protocol]",
              "sourcePortRange": "[variables('UDP500.Inbound.Allow').sourcePortRange]",
              "destinationPortRange": "[variables('UDP500.Inbound.Allow').destinationPortRange]",
              "sourceAddressPrefix": "[variables('UDP500.Inbound.Allow').sourceAddressPrefix]",
              "destinationAddressPrefix": "[variables('UDP500.Inbound.Allow').destinationAddressPrefix]",
              "access": "[variables('UDP500.Inbound.Allow').access]",
              "priority": "[variables('UDP500.Inbound.Allow').priority]",
              "direction": "[variables('UDP500.Inbound.Allow').direction]"
            }
          },
          {
            "name": "[variables('UDP4500.Inbound.Allow').description]",
            "properties": {
              "description": "[variables('UDP4500.Inbound.Allow').description]",
              "protocol": "[variables('UDP4500.Inbound.Allow').protocol]",
              "sourcePortRange": "[variables('UDP4500.Inbound.Allow').sourcePortRange]",
              "destinationPortRange": "[variables('UDP4500.Inbound.Allow').destinationPortRange]",
              "sourceAddressPrefix": "[variables('UDP4500.Inbound.Allow').sourceAddressPrefix]",
              "destinationAddressPrefix": "[variables('UDP4500.Inbound.Allow').destinationAddressPrefix]",
              "access": "[variables('UDP4500.Inbound.Allow').access]",
              "priority": "[variables('UDP4500.Inbound.Allow').priority]",
              "direction": "[variables('UDP4500.Inbound.Allow').direction]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet711NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "711_NSG_IntASA_InVA" },
      "properties": {
        "securityRules": [
          {
            "name": "[variables('All_Internet.Inbound.Deny').description]",
            "properties": {
              "description": "[variables('All_Internet.Inbound.Deny').description]",
              "protocol": "[variables('All_Internet.Inbound.Deny').protocol]",
              "sourcePortRange": "[variables('All_Internet.Inbound.Deny').sourcePortRange]",
              "destinationPortRange": "[variables('All_Internet.Inbound.Deny').destinationPortRange]",
              "sourceAddressPrefix": "[variables('All_Internet.Inbound.Deny').sourceAddressPrefix]",
              "destinationAddressPrefix": "[variables('All_Internet.Inbound.Deny').destinationAddressPrefix]",
              "access": "[variables('All_Internet.Inbound.Deny').access]",
              "priority": "[variables('All_Internet.Inbound.Deny').priority]",
              "direction": "[variables('All_Internet.Inbound.Deny').direction]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet712NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "712_NSG_IntASA_OutVA" },
      "properties": {
        "securityRules": [
          {
            "name": "[variables('All_Internet.Inbound.Deny').description]",
            "properties": {
              "description": "[variables('All_Internet.Inbound.Deny').description]",
              "protocol": "[variables('All_Internet.Inbound.Deny').protocol]",
              "sourcePortRange": "[variables('All_Internet.Inbound.Deny').sourcePortRange]",
              "destinationPortRange": "[variables('All_Internet.Inbound.Deny').destinationPortRange]",
              "sourceAddressPrefix": "[variables('All_Internet.Inbound.Deny').sourceAddressPrefix]",
              "destinationAddressPrefix": "[variables('All_Internet.Inbound.Deny').destinationAddressPrefix]",
              "access": "[variables('All_Internet.Inbound.Deny').access]",
              "priority": "[variables('All_Internet.Inbound.Deny').priority]",
              "direction": "[variables('All_Internet.Inbound.Deny').direction]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet713NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "713_NSG_IntASA_DMZVA" },
      "properties": {
        "securityRules": [
          {
            "name": "[variables('All_Internet.Inbound.Deny').description]",
            "properties": {
              "description": "[variables('All_Internet.Inbound.Deny').description]",
              "protocol": "[variables('All_Internet.Inbound.Deny').protocol]",
              "sourcePortRange": "[variables('All_Internet.Inbound.Deny').sourcePortRange]",
              "destinationPortRange": "[variables('All_Internet.Inbound.Deny').destinationPortRange]",
              "sourceAddressPrefix": "[variables('All_Internet.Inbound.Deny').sourceAddressPrefix]",
              "destinationAddressPrefix": "[variables('All_Internet.Inbound.Deny').destinationAddressPrefix]",
              "access": "[variables('All_Internet.Inbound.Deny').access]",
              "priority": "[variables('All_Internet.Inbound.Deny').priority]",
              "direction": "[variables('All_Internet.Inbound.Deny').direction]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet715NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "715_NSG_IntLBVA" },
      "properties": {
        "securityRules": [
          {
            "name": "[variables('All_Internet.Inbound.Deny').description]",
            "properties": {
              "description": "[variables('All_Internet.Inbound.Deny').description]",
              "protocol": "[variables('All_Internet.Inbound.Deny').protocol]",
              "sourcePortRange": "[variables('All_Internet.Inbound.Deny').sourcePortRange]",
              "destinationPortRange": "[variables('All_Internet.Inbound.Deny').destinationPortRange]",
              "sourceAddressPrefix": "[variables('All_Internet.Inbound.Deny').sourceAddressPrefix]",
              "destinationAddressPrefix": "[variables('All_Internet.Inbound.Deny').destinationAddressPrefix]",
              "access": "[variables('All_Internet.Inbound.Deny').access]",
              "priority": "[variables('All_Internet.Inbound.Deny').priority]",
              "direction": "[variables('All_Internet.Inbound.Deny').direction]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet750NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "750_NSG_ExtASA_MgntVA" },
      "properties": {
        "securityRules": [
          {
            "name": "[variables('All_Internet.Inbound.Deny').description]",
            "properties": {
              "description": "[variables('All_Internet.Inbound.Deny').description]",
              "protocol": "[variables('All_Internet.Inbound.Deny').protocol]",
              "sourcePortRange": "[variables('All_Internet.Inbound.Deny').sourcePortRange]",
              "destinationPortRange": "[variables('All_Internet.Inbound.Deny').destinationPortRange]",
              "sourceAddressPrefix": "[variables('All_Internet.Inbound.Deny').sourceAddressPrefix]",
              "destinationAddressPrefix": "[variables('All_Internet.Inbound.Deny').destinationAddressPrefix]",
              "access": "[variables('All_Internet.Inbound.Deny').access]",
              "priority": "[variables('All_Internet.Inbound.Deny').priority]",
              "direction": "[variables('All_Internet.Inbound.Deny').direction]"
            }
          },
          {
            "name": "[variables('SSH.Inbound.Allow').description]",
            "properties": {
              "description": "[variables('SSH.Inbound.Allow').description]",
              "protocol": "[variables('SSH.Inbound.Allow').protocol]",
              "sourcePortRange": "[variables('SSH.Inbound.Allow').sourcePortRange]",
              "destinationPortRange": "[variables('SSH.Inbound.Allow').destinationPortRange]",
              "sourceAddressPrefix": "[variables('SSH.Inbound.Allow').sourceAddressPrefix]",
              "destinationAddressPrefix": "[variables('SSH.Inbound.Allow').destinationAddressPrefix]",
              "access": "[variables('SSH.Inbound.Allow').access]",
              "priority": "[variables('SSH.Inbound.Allow').priority]",
              "direction": "[variables('SSH.Inbound.Allow').direction]"
            }
          },
          {
            "name": "[variables('UDP500.Inbound.Allow').description]",
            "properties": {
              "description": "[variables('UDP500.Inbound.Allow').description]",
              "protocol": "[variables('UDP500.Inbound.Allow').protocol]",
              "sourcePortRange": "[variables('UDP500.Inbound.Allow').sourcePortRange]",
              "destinationPortRange": "[variables('UDP500.Inbound.Allow').destinationPortRange]",
              "sourceAddressPrefix": "[variables('UDP500.Inbound.Allow').sourceAddressPrefix]",
              "destinationAddressPrefix": "[variables('UDP500.Inbound.Allow').destinationAddressPrefix]",
              "access": "[variables('UDP500.Inbound.Allow').access]",
              "priority": "[variables('UDP500.Inbound.Allow').priority]",
              "direction": "[variables('UDP500.Inbound.Allow').direction]"
            }
          },
          {
            "name": "[variables('UDP4500.Inbound.Allow').description]",
            "properties": {
              "description": "[variables('UDP4500.Inbound.Allow').description]",
              "protocol": "[variables('UDP4500.Inbound.Allow').protocol]",
              "sourcePortRange": "[variables('UDP4500.Inbound.Allow').sourcePortRange]",
              "destinationPortRange": "[variables('UDP4500.Inbound.Allow').destinationPortRange]",
              "sourceAddressPrefix": "[variables('UDP4500.Inbound.Allow').sourceAddressPrefix]",
              "destinationAddressPrefix": "[variables('UDP4500.Inbound.Allow').destinationAddressPrefix]",
              "access": "[variables('UDP4500.Inbound.Allow').access]",
              "priority": "[variables('UDP4500.Inbound.Allow').priority]",
              "direction": "[variables('UDP4500.Inbound.Allow').direction]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet751NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "751_NSG_ExtASA_InVA" },
      "properties": {
        "securityRules": [
          {
            "name": "[variables('All_Internet.Inbound.Deny').description]",
            "properties": {
              "description": "[variables('All_Internet.Inbound.Deny').description]",
              "protocol": "[variables('All_Internet.Inbound.Deny').protocol]",
              "sourcePortRange": "[variables('All_Internet.Inbound.Deny').sourcePortRange]",
              "destinationPortRange": "[variables('All_Internet.Inbound.Deny').destinationPortRange]",
              "sourceAddressPrefix": "[variables('All_Internet.Inbound.Deny').sourceAddressPrefix]",
              "destinationAddressPrefix": "[variables('All_Internet.Inbound.Deny').destinationAddressPrefix]",
              "access": "[variables('All_Internet.Inbound.Deny').access]",
              "priority": "[variables('All_Internet.Inbound.Deny').priority]",
              "direction": "[variables('All_Internet.Inbound.Deny').direction]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet752NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "752_NSG_ExtASA_OutVA" },
      "properties": {
        "securityRules": [
          {
            "name": "[variables('All_Internet.Inbound.Deny').description]",
            "properties": {
              "description": "[variables('All_Internet.Inbound.Deny').description]",
              "protocol": "[variables('All_Internet.Inbound.Deny').protocol]",
              "sourcePortRange": "[variables('All_Internet.Inbound.Deny').sourcePortRange]",
              "destinationPortRange": "[variables('All_Internet.Inbound.Deny').destinationPortRange]",
              "sourceAddressPrefix": "[variables('All_Internet.Inbound.Deny').sourceAddressPrefix]",
              "destinationAddressPrefix": "[variables('All_Internet.Inbound.Deny').destinationAddressPrefix]",
              "access": "[variables('All_Internet.Inbound.Deny').access]",
              "priority": "[variables('All_Internet.Inbound.Deny').priority]",
              "direction": "[variables('All_Internet.Inbound.Deny').direction]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet753NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "753_NSG_ExtASA_DMZVA" },
      "properties": {
        "securityRules": [
          {
            "name": "[variables('All_Internet.Inbound.Allow').description]",
            "properties": {
              "description": "[variables('All_Internet.Inbound.Allow').description]",
              "protocol": "[variables('All_Internet.Inbound.Allow').protocol]",
              "sourcePortRange": "[variables('All_Internet.Inbound.Allow').sourcePortRange]",
              "destinationPortRange": "[variables('All_Internet.Inbound.Allow').destinationPortRange]",
              "sourceAddressPrefix": "[variables('All_Internet.Inbound.Allow').sourceAddressPrefix]",
              "destinationAddressPrefix": "[variables('All_Internet.Inbound.Allow').destinationAddressPrefix]",
              "access": "[variables('All_Internet.Inbound.Allow').access]",
              "priority": "[variables('All_Internet.Inbound.Allow').priority]",
              "direction": "[variables('All_Internet.Inbound.Allow').direction]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet755NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "755_NSG_ExtLBVA" },
      "properties": {
        "securityRules": [
          {
            "name": "[variables('All_Internet.Inbound.Deny').description]",
            "properties": {
              "description": "[variables('All_Internet.Inbound.Deny').description]",
              "protocol": "[variables('All_Internet.Inbound.Deny').protocol]",
              "sourcePortRange": "[variables('All_Internet.Inbound.Deny').sourcePortRange]",
              "destinationPortRange": "[variables('All_Internet.Inbound.Deny').destinationPortRange]",
              "sourceAddressPrefix": "[variables('All_Internet.Inbound.Deny').sourceAddressPrefix]",
              "destinationAddressPrefix": "[variables('All_Internet.Inbound.Deny').destinationAddressPrefix]",
              "access": "[variables('All_Internet.Inbound.Deny').access]",
              "priority": "[variables('All_Internet.Inbound.Deny').priority]",
              "direction": "[variables('All_Internet.Inbound.Deny').direction]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/routeTables",
      "name": "[parameters('subnet700UDR')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "[parameters('subnet700UDR')]" },
      "properties": {
        "routes": [
          {
            "name": "RouteFrom700To701_CSR_Out",
            "properties": {
              "addressPrefix": "10.190.128.8/29",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('subnet700VNAIP')]"
            }
          },

          {
            "name": "RouteFrom700To713_IntASA_DMZ",
            "properties": {
              "addressPrefix": "10.190.128.88/29",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('subnet700VNAIP')]"
            }
          },
          {
            "name": "RouteFrom700To753_ExtASA_DMZ",
            "properties": {
              "addressPrefix": "10.190.128.136/29",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('subnet700VNAIP')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/routeTables",
      "name": "[parameters('subnet701UDR')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "[parameters('subnet701UDR')]" },
      "properties": {
        "routes": [
          {
            "name": "RouteFrom701To700_CSR_In",
            "properties": {
              "addressPrefix": "10.190.128.0/29",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('subnet701VNAIP')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/routeTables",
      "name": "[parameters('subnet702UDR')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "[parameters('subnet702UDR')]" },
      "properties": {
        "routes": [
          {
            "name": "RouteFrom702To703_CSR_HA",
            "properties": {
              "addressPrefix": "10.190.128.24/29",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('subnet702VNAIP')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/routeTables",
      "name": "[parameters('subnet703UDR')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "[parameters('subnet703UDR')]" },
      "properties": {
        "routes": [
          {
            "name": "RouteFrom703To702_CSR_Tunnel",
            "properties": {
              "addressPrefix": "10.190.128.16/29",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('subnet703VNAIP')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/routeTables",
      "name": "[parameters('subnet710UDR')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "[parameters('subnet710UDR')]" },
      "properties": {
        "routes": [
          {
            "name": "RouteFrom710To711_IntASA_In",
            "properties": {
              "addressPrefix": "10.190.128.72/29",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('subnet710VNAIP')]"
            }
          },
          {
            "name": "RouteFrom710To712_IntASA_Out",
            "properties": {
              "addressPrefix": "10.190.128.80/29",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('subnet710VNAIP')]"
            }
          },
          {
            "name": "RouteFrom710To713_IntASA_DMZ",
            "properties": {
              "addressPrefix": "10.190.128.88/29",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('subnet710VNAIP')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/routeTables",
      "name": "[parameters('subnet711UDR')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "[parameters('subnet711UDR')]" },
      "properties": {
        "routes": [
          {
            "name": "RouteFrom711To710_IntASA_Mgnt",
            "properties": {
              "addressPrefix": "10.190.128.64/29",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('subnet711VNAIP')]"
            }
          },
          {
            "name": "RouteFrom711To712_IntASA_Out",
            "properties": {
              "addressPrefix": "10.190.128.80/29",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('subnet711VNAIP')]"
            }


          },
          {
            "name": "RouteFrom711To713_IntASA_DMZ",
            "properties": {
              "addressPrefix": "10.190.128.88/29",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('subnet711VNAIP')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/routeTables",
      "name": "[parameters('subnet712UDR')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "[parameters('subnet712UDR')]" },
      "properties": {
        "routes": [
          {
            "name": "RouteFrom712To710_IntASA_Mgnt",
            "properties": {
              "addressPrefix": "10.190.128.64/29",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('subnet712VNAIP')]"
            }
          },
          {
            "name": "RouteFrom712To711_IntASA_In",
            "properties": {
              "addressPrefix": "10.190.128.72/29",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('subnet712VNAIP')]"
            }
          },
          {
            "name": "RouteFrom712To713_IntASA_DMZ",
            "properties": {
              "addressPrefix": "10.190.128.88/29",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('subnet712VNAIP')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/routeTables",
      "name": "[parameters('subnet713UDR')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "[parameters('subnet713UDR')]" },
      "properties": {
        "routes": [
          {
            "name": "RouteFrom713To710_IntASA_Mgnt",
            "properties": {
              "addressPrefix": "10.190.128.64/29",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('subnet713VNAIP')]"
            }
          },
          {
            "name": "RouteFrom713To711_IntASA_In",
            "properties": {
              "addressPrefix": "10.190.128.72/29",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('subnet713VNAIP')]"
            }
          },
          {
            "name": "RouteFrom713To712_IntASA_Out",
            "properties": {
              "addressPrefix": "10.190.128.80/29",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('subnet713VNAIP')]"
            }
          },
          {
            "name": "RouteFrom713To753_ExtASA_DMZ",
            "properties": {
              "addressPrefix": "10.190.128.136/29",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('subnet713VNAIP')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/routeTables",
      "name": "[parameters('subnet715UDR')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "[parameters('subnet715UDR')]" },
      "properties": {
        "routes": [
          {
            "name": "RouteFrom715To711_IntASA_In",
            "properties": {
              "addressPrefix": "10.190.128.72/29",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('subnet715VNAIP')]"
            }
          },
          {
            "name": "RouteFrom750To751_ExtASA_In",
            "properties": {
              "addressPrefix": "10.190.128.120/29",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('subnet750VNAIP')]"
            }
          },
          {
            "name": "RouteFrom750To752_ExtASA_Out",
            "properties": {
              "addressPrefix": "10.190.128.128/29",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('subnet750VNAIP')]"
            }
          },
          {
            "name": "RouteFrom750To753_ExtASA_DMZ",
            "properties": {
              "addressPrefix": "10.190.128.136/29",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('subnet750VNAIP')]"
            }
          }
        ]
      }
    },

    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/routeTables",
      "name": "[parameters('subnet750UDR')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "[parameters('subnet750UDR')]" },
      "properties": {
        "routes": [
          {
            "name": "RouteFrom750To751_ExtASA_In",
            "properties": {
              "addressPrefix": "10.190.128.120/29",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('subnet750VNAIP')]"
            }
          },
          {
            "name": "RouteFrom750To752_ExtASA_Out",
            "properties": {
              "addressPrefix": "10.190.128.128/29",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('subnet750VNAIP')]"
            }
          },
          {
            "name": "RouteFrom750To753_ExtASA_DMZ",
            "properties": {
              "addressPrefix": "10.190.128.136/29",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('subnet750VNAIP')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/routeTables",
      "name": "[parameters('subnet751UDR')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "[parameters('subnet751UDR')]" },
      "properties": {
        "routes": [
          {
            "name": "RouteFrom751To750_ExtASA_Mgnt",
            "properties": {
              "addressPrefix": "10.190.128.112/29",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('subnet751VNAIP')]"
            }
          },
          {
            "name": "RouteFrom751To752_ExtASA_Out",
            "properties": {
              "addressPrefix": "10.190.128.128/29",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('subnet751VNAIP')]"
            }
          },
          {
            "name": "RouteFrom751To753_ExtASA_DMZ",
            "properties": {
              "addressPrefix": "10.190.128.136/29",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('subnet751VNAIP')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/routeTables",
      "name": "[parameters('subnet752UDR')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "[parameters('subnet752UDR')]" },
      "properties": {
        "routes": [
          {
            "name": "RouteFrom752To750_ExtASA_Mgnt",
            "properties": {
              "addressPrefix": "10.190.128.112/29",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('subnet752VNAIP')]"
            }
          },
          {
            "name": "RouteFrom752To751_ExtASA_In",
            "properties": {
              "addressPrefix": "10.190.128.120/29",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('subnet752VNAIP')]"
            }
          },
          {
            "name": "RouteFrom752To753_ExtASA_DMZ",
            "properties": {
              "addressPrefix": "10.190.128.136/29",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('subnet752VNAIP')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/routeTables",
      "name": "[parameters('subnet753UDR')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "[parameters('subnet753UDR')]" },
      "properties": {
        "routes": [
          {
            "name": "RouteFrom753To750_ExtASA_Mgnt",
            "properties": {
              "addressPrefix": "10.190.128.112/29",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('subnet753VNAIP')]"
            }
          },
          {
            "name": "RouteFrom753To751_ExtASA_In",
            "properties": {
              "addressPrefix": "10.190.128.120/29",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('subnet753VNAIP')]"
            }
          },
          {
            "name": "RouteFrom753To752_ExtASA_Out",
            "properties": {
              "addressPrefix": "10.190.128.128/29",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('subnet753VNAIP')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/routeTables",
      "name": "[parameters('subnet755UDR')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "[parameters('subnet755UDR')]" },
      "properties": {
        "routes": [
          {
            "name": "RouteFrom755To751_ExtASA_In",
            "properties": {
              "addressPrefix": "10.190.128.120/29",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('subnet755VNAIP')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('vnetName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
      ],
      "tags": {
        "displayName": "VDC VNet TX"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnet700name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet700prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet700NSG'))]" },
              "routeTable": { "id": "[resourceID('Microsoft.Network/routeTables', parameters('subnet700UDR'))]" }
            }
          },
          {
            "name": "[parameters('subnet701name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet701prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet701NSG'))]" },
              "routeTable": { "id": "[resourceID('Microsoft.Network/routeTables', parameters('subnet701UDR'))]" }
            }
          },
          {
            "name": "[parameters('subnet702name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet702prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet702NSG'))]" },
              "routeTable": { "id": "[resourceID('Microsoft.Network/routeTables', parameters('subnet702UDR'))]" }
            }
          },
          {
            "name": "[parameters('subnet703name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet703prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet703NSG'))]" },
              "routeTable": { "id": "[resourceID('Microsoft.Network/routeTables', parameters('subnet703UDR'))]" }
            }
          },
          {
            "name": "[parameters('subnet710name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet710prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet710NSG'))]" },
              "routeTable": { "id": "[resourceID('Microsoft.Network/routeTables', parameters('subnet710UDR'))]" }
            }
          },
          {
            "name": "[parameters('subnet711name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet711prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet711NSG'))]" },
              "routeTable": { "id": "[resourceID('Microsoft.Network/routeTables', parameters('subnet711UDR'))]" }
            }
          },
          {
            "name": "[parameters('subnet712name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet712prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet712NSG'))]" },
              "routeTable": { "id": "[resourceID('Microsoft.Network/routeTables', parameters('subnet712UDR'))]" }
            }
          },
          {
            "name": "[parameters('subnet713name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet713prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet713NSG'))]" },
              "routeTable": { "id": "[resourceID('Microsoft.Network/routeTables', parameters('subnet713UDR'))]" }
            }
          },
          {
            "name": "[parameters('subnet715name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet715prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet715NSG'))]" },
              "routeTable": { "id": "[resourceID('Microsoft.Network/routeTables', parameters('subnet715UDR'))]" }
            }
          },
          {
            "name": "[parameters('subnet750name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet750prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet750NSG'))]" },
              "routeTable": { "id": "[resourceID('Microsoft.Network/routeTables', parameters('subnet750UDR'))]" }
            }
          },
          {
            "name": "[parameters('subnet751name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet751prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet751NSG'))]" },
              "routeTable": { "id": "[resourceID('Microsoft.Network/routeTables', parameters('subnet751UDR'))]" }
            }
          },
          {
            "name": "[parameters('subnet752name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet752prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet752NSG'))]" },
              "routeTable": { "id": "[resourceID('Microsoft.Network/routeTables', parameters('subnet752UDR'))]" }
            }
          },
          {
            "name": "[parameters('subnet753name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet753prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet753NSG'))]" },
              "routeTable": { "id": "[resourceID('Microsoft.Network/routeTables', parameters('subnet753UDR'))]" }
            }
          },
          {
            "name": "[parameters('subnet755name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet755prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet755NSG'))]" },
              "routeTable": { "id": "[resourceID('Microsoft.Network/routeTables', parameters('subnet755UDR'))]" }
            }
          },
          {
            "name": "GatewaySubnet",
            "properties": {
              "addressPrefix": "[parameters('subnet799Prefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Network/localNetworkGateways",
      "name": "[parameters('gatewayLocalName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "localNetworkAddressSpace": {
          "addressPrefixes": [
            "[parameters('gatewayLocalIpPrefix')]"
          ]
        },
        "gatewayIpAddress": "[parameters('gatewayLocalIpAddress')]"
      }
    },
    {
      "apiVersion": "[variables('api-version')]",
      "name": "[parameters('gatewayConnectionName')]",
      "type": "Microsoft.Network/connections",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworkGateways/', parameters('gatewayName'))]",
        "[concat('Microsoft.Network/localNetworkGateways/', parameters('gatewayLocalName'))]"
      ],
      "properties": {
        "virtualNetworkGateway1": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('gatewayName'))]"
        },
        "localNetworkGateway2": {
          "id": "[resourceId('Microsoft.Network/localNetworkGateways', parameters('gatewayLocalName'))]"
        },
        "connectionType": "IPsec",
        "routingWeight": 10,
        "sharedKey": "[parameters('gatewaySharedKey')]"
      }
    },
    {
      "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('gatewayPublicIPName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Network/virtualNetworkGateways",
      "name": "[parameters('gatewayName')]",
      "location": "[resourceGroup().location]",
  
      "properties": {
        "ipConfigurations": [
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": { "id": "[variables('subnet799Ref')]" },
              "publicIPAddress": { "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('gatewayPublicIPName'))]" }
            },
            "name": "[parameters('gatewayLocalName')]"
          }
        ],
        "sku": {
          "name": "[parameters('gatewaySku')]",
          "tier": "[parameters('gatewaySku')]"
        },
        "gatewayType": "Vpn",
        "vpnType": "[parameters('gatewayVPNType')]",
        "enableBgp": "false"
      }
    }

  ],
  "outputs": {
   
  }
}
